// generated by Fast Light User Interface Designer (fluid) version 3.0000

#include "gui.h"
UserInterface::UserInterface(int X, int Y, int W, int H, const char *L)
  : fltk3::Group(X, Y, W, H, L) {
{ fltk3::Group* o = new fltk3::Group(5, 5, 85, 205);
  { fltk3::Button* o = new fltk3::Button(5, 5, 85, 25, "Open Left");
    o->callback((fltk3::Callback*)leftcb);
  } // fltk3::Button* o
  { fltk3::Button* o = new fltk3::Button(5, 35, 85, 25, "Open Right");
    o->callback((fltk3::Callback*)rightcb);
  } // fltk3::Button* o
  { fltk3::Button* o = new fltk3::Button(5, 65, 85, 25, "Match");
    o->callback((fltk3::Callback*)matchcb);
  } // fltk3::Button* o
  { fltk3::Button* o = new fltk3::Button(5, 185, 85, 25, "Exit");
    o->callback((fltk3::Callback*)exitcb);
  } // fltk3::Button* o
  { fltk3::Button* o = new fltk3::Button(5, 155, 85, 25, "3D Viz");
    o->callback((fltk3::Callback*)vizcb);
  } // fltk3::Button* o
  { new fltk3::Button(5, 95, 85, 25, "Depth Map");
  } // fltk3::Button* o
  { fltk3::Button* o = new fltk3::Button(5, 125, 85, 25, "Match && Dpt");
    o->callback((fltk3::Callback*)mndcb);
  } // fltk3::Button* o
  o->end();
} // fltk3::Group* o
{ fltk3::Group* o = new fltk3::Group(95, 45, 198, 115);
  { new fltk3::Box(95, 45, 115, 25, "Match Startegy");
  } // fltk3::Box* o
  { feature_match_rb = new fltk3::CheckButton(95, 68, 115, 25, "Feature Match");
    feature_match_rb->down_box(fltk3::DOWN_BOX);
    feature_match_rb->value(1);
  } // fltk3::CheckButton* feature_match_rb
  { optical_flow_rb = new fltk3::CheckButton(95, 90, 115, 25, "Optical Flow");
    optical_flow_rb->down_box(fltk3::DOWN_BOX);
    optical_flow_rb->value(1);
  } // fltk3::CheckButton* optical_flow_rb
  { dense_of_rb = new fltk3::CheckButton(95, 113, 115, 25, "Dense O-F");
    dense_of_rb->down_box(fltk3::DOWN_BOX);
    dense_of_rb->value(1);
  } // fltk3::CheckButton* dense_of_rb
  { horiz_disparity_rb = new fltk3::CheckButton(95, 135, 115, 25, "Horiz. Disparity");
    horiz_disparity_rb->down_box(fltk3::DOWN_BOX);
  } // fltk3::CheckButton* horiz_disparity_rb
  o->end();
} // fltk3::Group* o
{ fltk3::Box* o = new fltk3::Box(225, 5, 273, 205, "Left");
  o->box(fltk3::BORDER_BOX);
} // fltk3::Box* o
{ fltk3::Box* o = new fltk3::Box(500, 5, 273, 205, "Right");
  o->box(fltk3::BORDER_BOX);
} // fltk3::Box* o
end();
}
